<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.studysiba.mapper.MessengerMapper">
  
  	<select id="checkRoomId" resultType="String">
  		select roomId from message 
  		where ( id = #{id} AND toId = #{toId} ) OR ( id = #{toId} AND toId = #{id} )
  		group by roomId
  	</select>
  	
  	<insert id="sendMessage">
  		<selectKey keyProperty="no" resultType="long" order="BEFORE">
    		select coalesce(max(no+1),1) as no from message
  		</selectKey>
  		insert into message (no, roomId, type, id, toId, content, mRead, mDate )
  		values ( #{no}, #{roomId}, #{type}, #{id}, #{toId}, #{content}, #{mRead}, now() )
  	</insert>
  	
  	<select id="getRoomId" resultType="long">
  		select COALESCE(max(roomId+1),1) as roomId from message
  	</select>
  	
  	<select id="getMessage" resultType="com.studysiba.domain.messenger.MessageVO">
  		select message.*, my.profile as myProfile, other.profile as toProfile from 
		( select no, roomId, type, id, toId, content, mRead, date_format(mDate, '%Y년%m월%d일 %H시%i분') as mDate from message 
		where ( id = #{id} AND toId = #{toId} ) OR ( id = #{toId} AND toId = #{id}) ) message
		join member my
		on message.id = my.id
		join member other
		on message.toId = other.id
		order by message.mDate ASC
  	</select>
  	
  	<select id="getMessengerUserList" resultType="com.studysiba.domain.messenger.MessageVO">
  		select member.nick , COALESCE(member.cDate,'disconnect') as cDate, member.proFile as profile, readcount.mRead from 
		( select * from message where no IN (select max(no) from message where id=#{id} or toId=#{id} group by roomid) ) message
		left join ( 
		select profile.id, profile.nick, profile.proFile, connect.cDate from 
		( select id, nick, proFile from member ) profile
		left join ( select id, cDate from member where cDate between now()-interval 1 minute and now() ) connect
		on profile.id = connect.id
		) member
		on message.toId = member.id
		left join ( select roomId, count(mRead) as mRead from message group by roomId, mRead having mRead=0 ) readcount
		on message.roomId = readcount.roomId 
		order by message.mDate
  	</select>
  	
  </mapper>